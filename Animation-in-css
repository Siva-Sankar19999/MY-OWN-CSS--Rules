TRANSFORM,TRANSITION,ANIMATION

->Transform
  translate(),scale(),rotate(),skew()
->Transition
  transition-property,transition-duration,transition-delay,transition timing functions
->Animation 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  

->Transform
  translate(30px,30px) : we can move the element in x-axis direction and y-axis direction     eg: trasnform:translateX(30px);  
  translateX(30px)     : 1.we can move the element in x-axis direction to 30px.
                         2.we can give negative values also.
                         3.If we give transform:translateX(50%) and element width is 150px and it will move 75px along x-axis.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------             
->Transform
  scale(1.2,1.2) : we can increase or decrease the size of element in x-axis and y-axis direction.
  scaleX(0.5)    : we are decreasing the size of element in x-axis direction to half.
  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
->Transform
  rotate(20deg)   : we can rotate the element. and we can use negative values also.
  rotateX(20deg)  : we cannot see anything in rotateX(20deg) and best to use is * rotate(20 deg) for rotating the element.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
->Transform
  skew(20deg,20deg) : we can make the element look like parallel box (if it is in box shape) and it is not used much.
  skewX(20deg)      : we are making the element to skew in x-axis direction.
  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
->Transition  
  transition-property
  transition-duration
  transition-delay
  
  when we apply hover affect to any element it state changes. we can control that state change using transition.
  we have to target the element attribute using transition-property.
  
  button{
    background-color:red;  
  }
  
  button:hover{
    background-color:pink;
  }
  
  first target the element attribute like below

  button{
    background-color:red; 
 ** transition-property:background-color;
    transition-duration:4s;
  }
  
  button:hover{
    background-color:pink;
  }  
  
  If there are more than one property in hover we can write comma separated values in transition-property or use  * all eg:transition-property:all;
  
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
->Transiton
  transition-timing-funegction
  ->Transition timimg functions tells how the transiton takes place and default value is ease i.e; ease means slow start and fast end
    transition-timing-function:ease,linear,ease-in,ease-out.we can use any value.
    eg: transition-timing-function:linear;
 --------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
->Animation
 ->Animation is similar to transition property and difference between them is for transtion we have to use hover to work with transition 
  and for animation it animates automatically and stops and we can we use infinte value to animate infinite time. and for transition it will works when we hover an
  element
  
  button{
    background-color:green;
    animation-name:<name>;
    animation-duration:4s;
    animation-interaction-count:4; --we can give infinite value also.
  }
  
  @keyframes <name>{
    0%{
       background-color:pink;
       transform:translateX(23px);
    }
    20%{
      background-color:yellow;
      transform:translateX(53px);
    }
    100%{
      background-color:blue;
    }
  }



















  
  
  
  
  
  
  
  
  

